{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Address": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"street": {
						"type": "string"
					},
					"number": {
						"type": "number",
						"format": "double"
					},
					"city": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"zipCode": {
						"type": "string"
					}
				},
				"required": [
					"street",
					"number",
					"city",
					"state",
					"country",
					"zipCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"bornDate": {
						"type": "string",
						"format": "date-time"
					},
					"documentNumber": {
						"type": "string"
					},
					"documentType": {
						"type": "string"
					},
					"address": {
						"$ref": "#/components/schemas/Address"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"bornDate",
					"documentNumber",
					"documentType",
					"address",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Address.Exclude_keyofAddress.id__": {
				"properties": {
					"number": {
						"type": "number",
						"format": "double"
					},
					"street": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"zipCode": {
						"type": "string"
					}
				},
				"required": [
					"number",
					"street",
					"city",
					"state",
					"country",
					"zipCode"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Address.id_": {
				"$ref": "#/components/schemas/Pick_Address.Exclude_keyofAddress.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CreateUserParams": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"bornDate": {
						"type": "string",
						"format": "date-time"
					},
					"documentNumber": {
						"type": "string"
					},
					"documentType": {
						"type": "string"
					},
					"address": {
						"$ref": "#/components/schemas/Omit_Address.id_"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"bornDate",
					"documentNumber",
					"documentType",
					"address",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "node-docker-postgres",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Felipe Bastos"
		}
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "documentNumber",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserParams"
							}
						}
					}
				}
			}
		},
		"/users/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}