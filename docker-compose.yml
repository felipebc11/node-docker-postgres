version: '3'
volumes:
  postgres-db-data:
    driver: local
  pg-admin-data:
    driver: local

services:
  app: 
    image: node:18.12.0-alpine
    container_name: app
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      HTTP_SEVER_PORT: 3000
      PG_DB_NAME: db-node
      PG_DB_HOST: postgres-db
      PG_DB_PORT: 5432
      PG_DB_USER: postgres
      PG_DB_PASSWORD: 1234
      PG_DB_SSL: 'false'
      JWT_SECRET: 'secret'
      JWT_EXPIRE: '1h'
      NODE_ENV: development
      
    ports:
      - 3000:3000
    volumes:
      - ./:/app
    depends_on:
      - postgres-db
      - pgadmin

  postgres-db:
    image: postgres:alpine
    ports:
      - '5432:5432'
    restart: always
    environment:
      POSTGRES_DB: db-node
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 30s
      timeout: 10s
      retries: 5

  pgadmin:
    hostname: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: 'dev@com.br'
      PGADMIN_DEFAULT_PASSWORD: 'admin'
    ports:
      - '6001:80'
    volumes:
      - pg-admin-data:/var/lib/pgadmin
    depends_on:
      - postgres-db

  tests: 
    image: node:18.12.0-alpine
    container_name: test
    working_dir: /tests
    command: sh -c "npm run test:system"
    environment:
      HTTP_SEVER_PORT: 3000
      PG_DB_NAME: db-node
      PG_DB_HOST: postgres-db
      PG_DB_PORT: 5432
      PG_DB_USER: postgres
      PG_DB_PASSWORD: 1234
      PG_DB_SSL: 'false'
      JWT_SECRET: 'secret'
      JWT_EXPIRE: '1h'
      NODE_ENV: development
      ADMIN_USER_EMAIL: 'felipebc@gmail.com'
      ADMIN_USER_PASSWORD: '12345'

    volumes:
      - ./:/tests
    depends_on:
      - postgres-db
      - pgadmin